{"version":3,"sources":["../../Documents/GitHub/app_v1/src/logo.svg","../../Documents/GitHub/app_v1/src/Components/dropDownMenu.js","../../Documents/GitHub/app_v1/src/Components/SimpleBarChart.js","../../Documents/GitHub/app_v1/src/Components/SimplePieChart.js","../../Documents/GitHub/app_v1/src/App.js","../../Documents/GitHub/app_v1/src/serviceWorker.js","../../Documents/GitHub/app_v1/src/index.js"],"names":["module","exports","__webpack_require__","p","stateList","value","label","placeHolder","dropDownMenu","react_default","a","createElement","react_select_browser_esm","placeholder","options","isMulti","Component","ht","isMobile","SimpleBarChart","ResponsiveContainer_default","width","height","BarChart_default","data","name","uv","pv","amt","margin","bottom","right","left","CartesianGrid_default","vertical","strokeDasharray","XAxis_default","dataKey","angle","textAnchor","tick","fontSize","YAxis_default","Tooltip_default","Bar_default","fill","SimplePieChart","PieChart_default","Pie_default","nameKey","cx","cy","outerRadius","today","Date","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","startDate","endDate","handleChange","bind","assertThisInitialized","handleChangeEnd","date","setState","className","Components_dropDownMenu","index_es","icon","faCalendarAlt","es","selected","onSelect","handleSelect","onChange","lib","projectionConfig","scale","style","center","disablePanning","geography","geographies","projection","map","i","key","data-tip","properties","default","stroke","strokeWidth","outline","hover","pressed","Components_SimpleBarChart","Components_SimplePieChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c5022a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nlet stateList =\n    [{value: \"Andaman and Nicobar Islands\", label: \"Andaman and Nicobar Islands\"},\n        {value: \"Andra Pradesh\", label: \"Andra Pradesh\"},\n        {value: \"Arunachal Pradesh\", label: \"Arunachal Pradesh\"},\n        {value: \"Assam\", label: \"Assam\"},\n        {value: \"Bihar\", label: \"Bihar\"},\n        {value: \"Chandigarh\", label: \"Chandigarh\"},\n        {value: \"Chhattisgarh\", label: \"Chhattisgarh\"},\n        {value: \"Dadar and Nagar Haveli\", label: \"Dadar and Nagar Haveli\"},\n        {value: \"Daman and Diu\", label: \"Daman and Diu\"},\n        {value: \"Delhi \", label: \"Delhi \"},\n        {value: \"Goa\", label: \"Goa\"},\n        {value: \"Gujarat\", label: \"Gujarat\"},\n        {value: \"Haryana\", label: \"Haryana\"},\n        {value: \"Himachal Pradesh\", label: \"Himachal Pradesh\"},\n        {value: \"Jammu and Kashmir\", label: \"Jammu and Kashmir\"},\n        {value: \"Jharkhand\", label: \"Jharkhand\"},\n        {value: \"Karnataka\", label: \"Karnataka\"},\n        {value: \"Kerala\", label: \"Kerala\"},\n        {value: \"Lakshadeep\", label: \"Lakshadeep\"},\n        {value: \"Madya Pradesh\", label: \"Madya Pradesh\"},\n        {value: \"Maharashtra\", label: \"Maharashtra\"},\n        {value: \"Manipur\", label: \"Manipur\"},\n        {value: \"Meghalaya\", label: \"Meghalaya\"},\n        {value: \"Mizoram\", label: \"Mizoram\"},\n        {value: \"Nagaland\", label: \"Nagaland\"},\n        {value: \"Orissa\", label: \"Orissa\"},\n        {value: \"Pondicherry\", label: \"Pondicherry\"},\n        {value: \"Punjab\", label: \"Punjab\"},\n        {value: \"Rajasthan\", label: \"Rajasthan\"},\n        {value: \"Sikkim\", label: \"Sikkim\"},\n        {value: \"Tamil Nadu\", label: \"Tamil Nadu\"},\n        {value: \"Telagana\", label: \"Telagana\"},\n        {value: \"Tripura\", label: \"Tripura\"},\n        {value: \"Uttar Pradesh\", label: \"Uttar Pradesh\"},\n        {value: \"Uttaranchal\", label: \"Uttaranchal\"},\n        {value: \"West Bengal\", label: \"West Bengal\"}]\n\nlet placeHolder = [{value: \"Delhi \", label: \"Delhi \"}]\nclass dropDownMenu extends Component {\n    render() {\n        return (\n\n            <Select\n                placeholder = {placeHolder}\n                value={placeHolder}\n                options={stateList}\n                isMulti={false}\n            />\n        )\n    }\n}\n\ndropDownMenu.propTypes = {\n    options: PropTypes.array,\n    onChange: PropTypes.func,\n    isMulti: PropTypes.bool\n};\n\nexport default dropDownMenu","import React, {Component} from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport BarChart from 'recharts/lib/chart/BarChart';\nimport Bar from 'recharts/lib/cartesian/Bar';\nimport XAxis from 'recharts/lib/cartesian/XAxis';\nimport YAxis from 'recharts/lib/cartesian/YAxis';\nimport CartesianGrid from 'recharts/lib/cartesian/CartesianGrid';\nimport Tooltip from 'recharts/lib/component/Tooltip';\nimport {isMobile} from \"react-device-detect\";\n\nvar ht = isMobile ? \"70%\" : \"80%\"\n\nclass SimpleBarChart extends Component {\n    render() {\n        var data = [\n            {\n                \"name\": \"Page A\",\n                \"uv\": 4000,\n                \"pv\": 2400,\n                \"amt\": 2400\n            },\n            {\n                \"name\": \"Page B\",\n                \"uv\": 3000,\n                \"pv\": 1398,\n                \"amt\": 2210\n            },\n            {\n                \"name\": \"Page C\",\n                \"uv\": 2000,\n                \"pv\": 9800,\n                \"amt\": 2290\n            },\n            {\n                \"name\": \"Page D\",\n                \"uv\": 2780,\n                \"pv\": 3908,\n                \"amt\": 2000\n            },\n            {\n                \"name\": \"Page E\",\n                \"uv\": 1890,\n                \"pv\": 4800,\n                \"amt\": 2181\n            },\n            {\n                \"name\": \"Page F\",\n                \"uv\": 2390,\n                \"pv\": 3800,\n                \"amt\": 2500\n            },\n            {\n                \"name\": \"Page G\",\n                \"uv\": 3490,\n                \"pv\": 4300,\n                \"amt\": 2100\n            }\n        ]\n\n            return (\n                <ResponsiveContainer width=\"99%\" height={ht}>\n                    <BarChart data={data} margin={{bottom: 30, right: 10, left: 10}}>\n                        <CartesianGrid vertical={false} strokeDasharray=\"3 3\"/>\n                        <XAxis dataKey=\"name\" angle={-45} textAnchor='end'\n                               tick={{fontSize: 13}}/>\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n                        <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            );\n    }\n}\n\nexport default SimpleBarChart;","import React, {Component} from 'react';\nimport ResponsiveContainer from 'recharts/lib/component/ResponsiveContainer';\nimport PieChart from 'recharts/lib/chart/PieChart';\nimport Pie from 'recharts/lib/polar/Pie';\nimport {isMobile} from \"react-device-detect\";\n\nvar ht = isMobile ? \"70%\" : \"80%\"\n\nclass SimplePieChart extends Component {\n    render() {\n        var data01 = [\n            {\n                \"name\": \"Group A\",\n                \"value\": 400\n            },\n            {\n                \"name\": \"Group B\",\n                \"value\": 300\n            },\n            {\n                \"name\": \"Group C\",\n                \"value\": 300\n            },\n            {\n                \"name\": \"Group D\",\n                \"value\": 200\n            },\n            {\n                \"name\": \"Group E\",\n                \"value\": 278\n            },\n            {\n                \"name\": \"Group F\",\n                \"value\": 189\n            }\n        ];\n\n\n        return (\n            <ResponsiveContainer width=\"99%\" height={ht}>\n                <PieChart>\n                    <Pie data={data01} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} fill=\"#8884d8\" label/>\n                </PieChart>\n            </ResponsiveContainer>\n        );\n    }\n}\n\nexport default SimplePieChart;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n    ComposableMap,\n    ZoomableGroup,\n    Geographies,\n    Geography,\n} from \"react-simple-maps\"\nimport DropDownMenu from \"./Components/dropDownMenu\";\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css'\nimport {faCalendarAlt} from \"@fortawesome/free-solid-svg-icons/index\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport SimpleBarChart from './Components/SimpleBarChart';\nimport SimplePieChart from './Components/SimplePieChart';\n\nvar today = new Date()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            startDate: today - 1000 * 60 * 60 * 24 * 1,\n            endDate: today - 1000 * 60 * 60 * 24 * 30\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChangeEnd = this.handleChangeEnd.bind(this);\n    }\n\n    handleChange(date) {\n        this.setState({\n            startDate: date\n        });\n    }\n    handleChangeEnd(date) {\n        this.setState({\n            endDate: date\n        });\n    }\n    render() {\n        return (\n            <div className=\"Dashboard\">\n<div className = \"App-header\">\n    Dashboard\n</div>\n            <div className=\"map-container\">\n                <div className=\"barButtonGroup\">\n                    <div className=\"StateChart\">\n                        <span className=\"TopFilterLabel\">Filter &nbsp; </span>\n                        State:&nbsp;&nbsp;&nbsp;&nbsp; <DropDownMenu />\n                        <span > &nbsp;&nbsp;&nbsp;&nbsp;</span>\n                        Period:&nbsp;&nbsp;&nbsp;&nbsp;\n                        <div className = \"DatePicker\">\n                            <label className = \"DatePicker1\">\n                            <FontAwesomeIcon icon={faCalendarAlt} className=\"calendarIcon\"/>\n                            <DatePicker\n                                className=\"DateText\"\n                                selected={this.state.startDate}\n                                onSelect={this.handleSelect} //when day is clicked\n                                onChange={this.handleChange} //only when value has changed\n                            />\n                        </label>\n                            &nbsp;&nbsp;&nbsp;&nbsp; To:&nbsp;&nbsp;&nbsp;&nbsp;\n                        <label className = \"DatePicker1\">\n                            <FontAwesomeIcon icon={faCalendarAlt} className=\"calendarIcon\"/>\n                            <DatePicker\n                                className=\"DateText\"\n                                selected={this.state.endDate}\n                                onSelect={this.handleSelect} //when day is clicked\n                                onChange={this.handleChangeEnd} //only when value has changed\n                            />\n                        </label>\n                        </div>\n                    </div>\n                </div>\n                <ComposableMap\n                    projectionConfig={{ scale: 35 }}\n                    width={30}\n                    height={20}\n                    style={{\n                        width: \"100%\",\n                        height: \"auto\",\n                    }}\n                >\n                    <ZoomableGroup center={[ 80, 24]} disablePanning>\n                        <Geographies  geography='./gadm36_IND.json'>\n                            {(geographies, projection) =>\n                                geographies.map((geography, i) =>\n                                <Geography\n                                key={i}\n                                data-tip={geography.properties.name}\n                                geography={geography}\n                                projection={projection}\n                                style={{\n                                default: {\n                                    fill: \"#ECEFF1\",\n                                    stroke: \"#607D8B\",\n                                    strokeWidth: 0.05,\n                                    outline: \"none\",\n                                },\n                                hover: {\n                                    fill: \"#8884d8\",\n                                    stroke: \"#607D8B\",\n                                    strokeWidth: 0.07,\n                                    outline: \"none\",\n                                },\n                                pressed: {\n                                    fill: \"#8884d8\",\n                                    stroke: \"#607D8B\",\n                                    strokeWidth: 0.07,\n                                    outline: \"none\",\n                                }\n                            }}\n                                />\n                                )\n                            }\n                        </ Geographies>\n                    </ ZoomableGroup>\n                </ ComposableMap>\n            </div>\n                <div className=\"chart1\">\n                    <div className=\"chartContainer\">\n                        <h3> Total Collection </h3>\n                        <SimpleBarChart/>\n                    </div>\n\n                    <div className=\"chartContainer\">\n                        <h3> Route Performance </h3>\n                        <SimpleBarChart/>\n                    </div>\n                </div>\n                <div className=\"chart1\">\n                    <div className=\"chartContainer\">\n                        <h3> Total Violation </h3>\n                        <SimplePieChart/>\n                    </div>\n\n                    <div className=\"chartContainer\">\n                        <h3> Top 3 Performance </h3>\n                        <SimpleBarChart/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}